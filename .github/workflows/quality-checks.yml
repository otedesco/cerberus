name: Quality checks

on:
  workflow_call:
  pull_request:
    types: [opened, edited, reopened, synchronize]
    branches:
      - '*'
  push:
    branches:
      - '*'
    paths-ignore:
      - 'main'

jobs:
  common:
    name: Common Setup
    runs-on: ubuntu-latest
    outputs:
      bun_path: ${{ steps.upload-bun.outputs.bun_path }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup environment
        id: setup
        uses: otedesco/cerberus/.github/actions/setup-environment@main
        with:
          os: ubuntu-latest

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Running pnpm install"
          pnpm install

      - name: Upload bun installation
        id: upload-bun
        uses: actions/upload-artifact@v3
        with:
          name: bun
          path: ~/.bun

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    needs: [common]
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Download bun installation
        uses: actions/download-artifact@v3
        with:
          name: bun

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Typecheck
        run: bun run type:check

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: [common]
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Download bun installation
        uses: actions/download-artifact@v3
        with:
          name: bun

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Test
        run: bun run test

  linting:
    name: Linting
    runs-on: ubuntu-latest
    needs: [common]
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Download bun installation
        uses: actions/download-artifact@v3
        with:
          name: bun

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Linting
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        continue-on-error: true
        run: bun run lint:check
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [typecheck, tests, linting]
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Download bun installation
        uses: actions/download-artifact@v3
        with:
          name: bun

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Build
        run: pnpm build
